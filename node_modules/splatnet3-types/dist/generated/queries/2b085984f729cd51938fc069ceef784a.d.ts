import { LinkedFieldType, OperationFieldType } from '../../generated-type-helpers.js';
import { Award, Badge, BankaraMatchHistory, Brand, ClothingGear, Color, FestMatchHistory, Gear, GearPower, HeadGear, Image, LeagueMatchEvent, LeagueMatchHistory, MaskingImage, Nameplate, NameplateBackground, Player, ShoesGear, SpecialWeapon, SubWeapon, VsHistoryDetail, VsMode, VsPlayer, VsPlayerResult, VsRule, VsStage, VsTeam, VsTeamResult, Weapon, XMatchHistory } from '../../types.js';
/**
 * 2b085984f729cd51938fc069ceef784a VsHistoryDetailQuery
 *
 * query VsHistoryDetailQuery
 *
 * Generated 11/12/2022 from SplatNet 3 1.0.0-5644e7a2.
 */
interface VsHistoryDetailQuery_2b08598 {
    vsHistoryDetail: OperationFieldType<'VsHistoryDetailQuery', 'node', ({
        __typename: string;
        id: VsHistoryDetail['id'];
    }) & ({
        awards: LinkedFieldType<VsHistoryDetail, 'awards', {
            name: Award['name'];
            rank: Award['rank'];
        }, true>;
        bankaraMatch: LinkedFieldType<VsHistoryDetail, 'bankaraMatch', {
            earnedUdemaePoint: BankaraMatchHistory['earnedUdemaePoint'];
            mode: BankaraMatchHistory['mode'];
        }, false>;
        duration: VsHistoryDetail['duration'];
        festMatch: LinkedFieldType<VsHistoryDetail, 'festMatch', {
            contribution: FestMatchHistory['contribution'];
            dragonMatchType: FestMatchHistory['dragonMatchType'];
            jewel: FestMatchHistory['jewel'];
            myFestPower: FestMatchHistory['myFestPower'];
        }, false>;
        judgement: VsHistoryDetail['judgement'];
        knockout: VsHistoryDetail['knockout'];
        leagueMatch: LinkedFieldType<VsHistoryDetail, 'leagueMatch', {
            leagueMatchEvent: LinkedFieldType<LeagueMatchHistory, 'leagueMatchEvent', {
                id: LeagueMatchEvent['id'];
                desc: LeagueMatchEvent['desc'];
                name: LeagueMatchEvent['name'];
            }, false>;
            teamId: LeagueMatchHistory['teamId'];
        }, false>;
        myTeam: LinkedFieldType<VsHistoryDetail, 'myTeam', {
            color: LinkedFieldType<VsTeam, 'color', {
                r: Color['r'];
                g: Color['g'];
                b: Color['b'];
                a: Color['a'];
            }, false>;
            festTeamName: VsTeam['festTeamName'];
            judgement: VsTeam['judgement'];
            order: VsTeam['order'];
            players: LinkedFieldType<VsTeam, 'players', ({
                __typename: 'VsPlayer';
                id: VsPlayer['id'];
                byname: VsPlayer['byname'];
                clothingGear: LinkedFieldType<VsPlayer, 'clothingGear', ({
                    name: ClothingGear['name'];
                    thumbnailImage: LinkedFieldType<ClothingGear, 'image', {
                        url: Image['url'];
                    }, false>;
                }) & ({
                    __isGear: 'Gear';
                    additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, true>;
                    brand: LinkedFieldType<Gear, 'brand', {
                        id: Brand['id'];
                        image: LinkedFieldType<Brand, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: Brand['name'];
                        usualGearPower: LinkedFieldType<Brand, 'usualGearPower', {
                            desc: GearPower['desc'];
                            image: LinkedFieldType<GearPower, 'image', {
                                url: Image['url'];
                            }, false>;
                            isEmptySlot: GearPower['isEmptySlot'];
                            name: GearPower['name'];
                        }, false>;
                    }, false>;
                    originalImage: LinkedFieldType<Gear, 'image', {
                        url: Image['url'];
                    }, false>;
                    primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, false>;
                }) & ({
                    __typename: 'Gear';
                }), false>;
                festDragonCert: VsPlayer['festDragonCert'];
                headGear: LinkedFieldType<VsPlayer, 'headGear', ({
                    name: HeadGear['name'];
                    thumbnailImage: LinkedFieldType<HeadGear, 'image', {
                        url: Image['url'];
                    }, false>;
                }) & ({
                    __isGear: 'Gear';
                    additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, true>;
                    brand: LinkedFieldType<Gear, 'brand', {
                        id: Brand['id'];
                        image: LinkedFieldType<Brand, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: Brand['name'];
                        usualGearPower: LinkedFieldType<Brand, 'usualGearPower', {
                            desc: GearPower['desc'];
                            image: LinkedFieldType<GearPower, 'image', {
                                url: Image['url'];
                            }, false>;
                            isEmptySlot: GearPower['isEmptySlot'];
                            name: GearPower['name'];
                        }, false>;
                    }, false>;
                    originalImage: LinkedFieldType<Gear, 'image', {
                        url: Image['url'];
                    }, false>;
                    primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, false>;
                }) & ({
                    __typename: 'Gear';
                }), false>;
                isMyself: VsPlayer['isMyself'];
                name: VsPlayer['name'];
                nameId: VsPlayer['nameId'];
                paint: VsPlayer['paint'];
                result: LinkedFieldType<VsPlayer, 'result', {
                    assist: VsPlayerResult['assist'];
                    death: VsPlayerResult['death'];
                    kill: VsPlayerResult['kill'];
                    noroshiTry: VsPlayerResult['noroshiTry'];
                    special: VsPlayerResult['special'];
                }, false>;
                shoesGear: LinkedFieldType<VsPlayer, 'shoesGear', ({
                    name: ShoesGear['name'];
                    thumbnailImage: LinkedFieldType<ShoesGear, 'image', {
                        url: Image['url'];
                    }, false>;
                }) & ({
                    __isGear: 'Gear';
                    additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, true>;
                    brand: LinkedFieldType<Gear, 'brand', {
                        id: Brand['id'];
                        image: LinkedFieldType<Brand, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: Brand['name'];
                        usualGearPower: LinkedFieldType<Brand, 'usualGearPower', {
                            desc: GearPower['desc'];
                            image: LinkedFieldType<GearPower, 'image', {
                                url: Image['url'];
                            }, false>;
                            isEmptySlot: GearPower['isEmptySlot'];
                            name: GearPower['name'];
                        }, false>;
                    }, false>;
                    originalImage: LinkedFieldType<Gear, 'image', {
                        url: Image['url'];
                    }, false>;
                    primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, false>;
                }) & ({
                    __typename: 'Gear';
                }), false>;
                species: VsPlayer['species'];
                weapon: LinkedFieldType<VsPlayer, 'weapon', {
                    id: Weapon['id'];
                    image: LinkedFieldType<Weapon, 'image', {
                        url: Image['url'];
                    }, false>;
                    image2d: LinkedFieldType<Weapon, 'image', {
                        url: Image['url'];
                    }, false>;
                    image2dThumbnail: LinkedFieldType<Weapon, 'image', {
                        url: Image['url'];
                    }, false>;
                    image3d: LinkedFieldType<Weapon, 'image', {
                        url: Image['url'];
                    }, false>;
                    image3dThumbnail: LinkedFieldType<Weapon, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: Weapon['name'];
                    specialWeapon: LinkedFieldType<Weapon, 'specialWeapon', {
                        id: SpecialWeapon['id'];
                        image: LinkedFieldType<SpecialWeapon, 'image', {
                            url: Image['url'];
                        }, false>;
                        maskingImage: LinkedFieldType<SpecialWeapon, 'maskingImage', {
                            height: MaskingImage['height'];
                            maskImageUrl: MaskingImage['maskImageUrl'];
                            overlayImageUrl: MaskingImage['overlayImageUrl'];
                            width: MaskingImage['width'];
                        }, false>;
                        name: SpecialWeapon['name'];
                    }, false>;
                    subWeapon: LinkedFieldType<Weapon, 'subWeapon', {
                        id: SubWeapon['id'];
                        image: LinkedFieldType<SubWeapon, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: SubWeapon['name'];
                    }, false>;
                }, false>;
            }) & ({
                __isPlayer: 'Player';
                nameplate: LinkedFieldType<Player, 'nameplate', {
                    background: LinkedFieldType<Nameplate, 'background', {
                        id: NameplateBackground['id'];
                        image: LinkedFieldType<NameplateBackground, 'image', {
                            url: Image['url'];
                        }, false>;
                        textColor: LinkedFieldType<NameplateBackground, 'textColor', {
                            r: Color['r'];
                            g: Color['g'];
                            b: Color['b'];
                            a: Color['a'];
                        }, false>;
                    }, false>;
                    badges: LinkedFieldType<Nameplate, 'badges', {
                        id: Badge['id'];
                        image: LinkedFieldType<Badge, 'image', {
                            url: Image['url'];
                        }, false>;
                    }, true>;
                }, false>;
            }) & ({
                __typename: 'Player';
            }), true>;
            result: LinkedFieldType<VsTeam, 'result', {
                noroshi: VsTeamResult['noroshi'];
                paintRatio: VsTeamResult['paintRatio'];
                score: VsTeamResult['score'];
            }, false>;
            tricolorRole: VsTeam['tricolorRole'];
        }, false>;
        nextHistoryDetail: LinkedFieldType<VsHistoryDetail, 'nextHistoryDetail', {
            id: VsHistoryDetail['id'];
        }, false>;
        otherTeams: LinkedFieldType<VsHistoryDetail, 'otherTeams', {
            color: LinkedFieldType<VsTeam, 'color', {
                r: Color['r'];
                g: Color['g'];
                b: Color['b'];
                a: Color['a'];
            }, false>;
            festTeamName: VsTeam['festTeamName'];
            judgement: VsTeam['judgement'];
            order: VsTeam['order'];
            players: LinkedFieldType<VsTeam, 'players', ({
                __typename: 'VsPlayer';
                id: VsPlayer['id'];
                byname: VsPlayer['byname'];
                clothingGear: LinkedFieldType<VsPlayer, 'clothingGear', ({
                    name: ClothingGear['name'];
                    thumbnailImage: LinkedFieldType<ClothingGear, 'image', {
                        url: Image['url'];
                    }, false>;
                }) & ({
                    __isGear: 'Gear';
                    additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, true>;
                    brand: LinkedFieldType<Gear, 'brand', {
                        id: Brand['id'];
                        image: LinkedFieldType<Brand, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: Brand['name'];
                        usualGearPower: LinkedFieldType<Brand, 'usualGearPower', {
                            desc: GearPower['desc'];
                            image: LinkedFieldType<GearPower, 'image', {
                                url: Image['url'];
                            }, false>;
                            isEmptySlot: GearPower['isEmptySlot'];
                            name: GearPower['name'];
                        }, false>;
                    }, false>;
                    originalImage: LinkedFieldType<Gear, 'image', {
                        url: Image['url'];
                    }, false>;
                    primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, false>;
                }) & ({
                    __typename: 'Gear';
                }), false>;
                festDragonCert: VsPlayer['festDragonCert'];
                headGear: LinkedFieldType<VsPlayer, 'headGear', ({
                    name: HeadGear['name'];
                    thumbnailImage: LinkedFieldType<HeadGear, 'image', {
                        url: Image['url'];
                    }, false>;
                }) & ({
                    __isGear: 'Gear';
                    additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, true>;
                    brand: LinkedFieldType<Gear, 'brand', {
                        id: Brand['id'];
                        image: LinkedFieldType<Brand, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: Brand['name'];
                        usualGearPower: LinkedFieldType<Brand, 'usualGearPower', {
                            desc: GearPower['desc'];
                            image: LinkedFieldType<GearPower, 'image', {
                                url: Image['url'];
                            }, false>;
                            isEmptySlot: GearPower['isEmptySlot'];
                            name: GearPower['name'];
                        }, false>;
                    }, false>;
                    originalImage: LinkedFieldType<Gear, 'image', {
                        url: Image['url'];
                    }, false>;
                    primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, false>;
                }) & ({
                    __typename: 'Gear';
                }), false>;
                isMyself: VsPlayer['isMyself'];
                name: VsPlayer['name'];
                nameId: VsPlayer['nameId'];
                paint: VsPlayer['paint'];
                result: LinkedFieldType<VsPlayer, 'result', {
                    assist: VsPlayerResult['assist'];
                    death: VsPlayerResult['death'];
                    kill: VsPlayerResult['kill'];
                    noroshiTry: VsPlayerResult['noroshiTry'];
                    special: VsPlayerResult['special'];
                }, false>;
                shoesGear: LinkedFieldType<VsPlayer, 'shoesGear', ({
                    name: ShoesGear['name'];
                    thumbnailImage: LinkedFieldType<ShoesGear, 'image', {
                        url: Image['url'];
                    }, false>;
                }) & ({
                    __isGear: 'Gear';
                    additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, true>;
                    brand: LinkedFieldType<Gear, 'brand', {
                        id: Brand['id'];
                        image: LinkedFieldType<Brand, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: Brand['name'];
                        usualGearPower: LinkedFieldType<Brand, 'usualGearPower', {
                            desc: GearPower['desc'];
                            image: LinkedFieldType<GearPower, 'image', {
                                url: Image['url'];
                            }, false>;
                            isEmptySlot: GearPower['isEmptySlot'];
                            name: GearPower['name'];
                        }, false>;
                    }, false>;
                    originalImage: LinkedFieldType<Gear, 'image', {
                        url: Image['url'];
                    }, false>;
                    primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, false>;
                }) & ({
                    __typename: 'Gear';
                }), false>;
                species: VsPlayer['species'];
                weapon: LinkedFieldType<VsPlayer, 'weapon', {
                    id: Weapon['id'];
                    image: LinkedFieldType<Weapon, 'image', {
                        url: Image['url'];
                    }, false>;
                    image2d: LinkedFieldType<Weapon, 'image', {
                        url: Image['url'];
                    }, false>;
                    image2dThumbnail: LinkedFieldType<Weapon, 'image', {
                        url: Image['url'];
                    }, false>;
                    image3d: LinkedFieldType<Weapon, 'image', {
                        url: Image['url'];
                    }, false>;
                    image3dThumbnail: LinkedFieldType<Weapon, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: Weapon['name'];
                    specialWeapon: LinkedFieldType<Weapon, 'specialWeapon', {
                        id: SpecialWeapon['id'];
                        image: LinkedFieldType<SpecialWeapon, 'image', {
                            url: Image['url'];
                        }, false>;
                        maskingImage: LinkedFieldType<SpecialWeapon, 'maskingImage', {
                            height: MaskingImage['height'];
                            maskImageUrl: MaskingImage['maskImageUrl'];
                            overlayImageUrl: MaskingImage['overlayImageUrl'];
                            width: MaskingImage['width'];
                        }, false>;
                        name: SpecialWeapon['name'];
                    }, false>;
                    subWeapon: LinkedFieldType<Weapon, 'subWeapon', {
                        id: SubWeapon['id'];
                        image: LinkedFieldType<SubWeapon, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: SubWeapon['name'];
                    }, false>;
                }, false>;
            }) & ({
                __isPlayer: 'Player';
                nameplate: LinkedFieldType<Player, 'nameplate', {
                    background: LinkedFieldType<Nameplate, 'background', {
                        id: NameplateBackground['id'];
                        image: LinkedFieldType<NameplateBackground, 'image', {
                            url: Image['url'];
                        }, false>;
                        textColor: LinkedFieldType<NameplateBackground, 'textColor', {
                            r: Color['r'];
                            g: Color['g'];
                            b: Color['b'];
                            a: Color['a'];
                        }, false>;
                    }, false>;
                    badges: LinkedFieldType<Nameplate, 'badges', {
                        id: Badge['id'];
                        image: LinkedFieldType<Badge, 'image', {
                            url: Image['url'];
                        }, false>;
                    }, true>;
                }, false>;
            }) & ({
                __typename: 'Player';
            }), true>;
            result: LinkedFieldType<VsTeam, 'result', {
                noroshi: VsTeamResult['noroshi'];
                paintRatio: VsTeamResult['paintRatio'];
                score: VsTeamResult['score'];
            }, false>;
            tricolorRole: VsTeam['tricolorRole'];
        }, true>;
        playedTime: VsHistoryDetail['playedTime'];
        player: LinkedFieldType<VsHistoryDetail, 'player', ({
            id: VsPlayer['id'];
            clothingGear: LinkedFieldType<VsPlayer, 'clothingGear', ({
                image: LinkedFieldType<ClothingGear, 'image', {
                    url: Image['url'];
                }, false>;
                name: ClothingGear['name'];
            }) & ({
                __isGear: 'Gear';
                additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                    image: LinkedFieldType<GearPower, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: GearPower['name'];
                }, true>;
                brand: LinkedFieldType<Gear, 'brand', {
                    id: Brand['id'];
                    image: LinkedFieldType<Brand, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: Brand['name'];
                    usualGearPower: LinkedFieldType<Brand, 'usualGearPower', {
                        desc: GearPower['desc'];
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        isEmptySlot: GearPower['isEmptySlot'];
                        name: GearPower['name'];
                    }, false>;
                }, false>;
                originalImage: LinkedFieldType<Gear, 'image', {
                    url: Image['url'];
                }, false>;
                primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                    image: LinkedFieldType<GearPower, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: GearPower['name'];
                }, false>;
            }), false>;
            headGear: LinkedFieldType<VsPlayer, 'headGear', ({
                image: LinkedFieldType<HeadGear, 'image', {
                    url: Image['url'];
                }, false>;
                name: HeadGear['name'];
            }) & ({
                __isGear: 'Gear';
                additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                    image: LinkedFieldType<GearPower, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: GearPower['name'];
                }, true>;
                brand: LinkedFieldType<Gear, 'brand', {
                    id: Brand['id'];
                    image: LinkedFieldType<Brand, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: Brand['name'];
                    usualGearPower: LinkedFieldType<Brand, 'usualGearPower', {
                        desc: GearPower['desc'];
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        isEmptySlot: GearPower['isEmptySlot'];
                        name: GearPower['name'];
                    }, false>;
                }, false>;
                originalImage: LinkedFieldType<Gear, 'image', {
                    url: Image['url'];
                }, false>;
                primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                    image: LinkedFieldType<GearPower, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: GearPower['name'];
                }, false>;
            }), false>;
            paint: VsPlayer['paint'];
            shoesGear: LinkedFieldType<VsPlayer, 'shoesGear', ({
                image: LinkedFieldType<ShoesGear, 'image', {
                    url: Image['url'];
                }, false>;
                name: ShoesGear['name'];
            }) & ({
                __isGear: 'Gear';
                additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                    image: LinkedFieldType<GearPower, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: GearPower['name'];
                }, true>;
                brand: LinkedFieldType<Gear, 'brand', {
                    id: Brand['id'];
                    image: LinkedFieldType<Brand, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: Brand['name'];
                    usualGearPower: LinkedFieldType<Brand, 'usualGearPower', {
                        desc: GearPower['desc'];
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        isEmptySlot: GearPower['isEmptySlot'];
                        name: GearPower['name'];
                    }, false>;
                }, false>;
                originalImage: LinkedFieldType<Gear, 'image', {
                    url: Image['url'];
                }, false>;
                primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                    image: LinkedFieldType<GearPower, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: GearPower['name'];
                }, false>;
            }), false>;
        }) & ({
            __isPlayer: 'Player';
            byname: Player['byname'];
            name: Player['name'];
            nameId: Player['nameId'];
            nameplate: LinkedFieldType<Player, 'nameplate', {
                background: LinkedFieldType<Nameplate, 'background', {
                    id: NameplateBackground['id'];
                    image: LinkedFieldType<NameplateBackground, 'image', {
                        url: Image['url'];
                    }, false>;
                    textColor: LinkedFieldType<NameplateBackground, 'textColor', {
                        r: Color['r'];
                        g: Color['g'];
                        b: Color['b'];
                        a: Color['a'];
                    }, false>;
                }, false>;
                badges: LinkedFieldType<Nameplate, 'badges', {
                    id: Badge['id'];
                    image: LinkedFieldType<Badge, 'image', {
                        url: Image['url'];
                    }, false>;
                }, true>;
            }, false>;
        }), false>;
        previousHistoryDetail: LinkedFieldType<VsHistoryDetail, 'previousHistoryDetail', {
            id: VsHistoryDetail['id'];
        }, false>;
        vsMode: LinkedFieldType<VsHistoryDetail, 'vsMode', {
            id: VsMode['id'];
            mode: VsMode['mode'];
        }, false>;
        vsRule: LinkedFieldType<VsHistoryDetail, 'vsRule', {
            id: VsRule['id'];
            name: VsRule['name'];
            rule: VsRule['rule'];
        }, false>;
        vsStage: LinkedFieldType<VsHistoryDetail, 'vsStage', {
            id: VsStage['id'];
            image: LinkedFieldType<VsStage, 'image', {
                url: Image['url'];
            }, false>;
            name: VsStage['name'];
        }, false>;
        xMatch: LinkedFieldType<VsHistoryDetail, 'xMatch', {
            entireXPower: XMatchHistory['entireXPower'];
            lastXPower: XMatchHistory['lastXPower'];
        }, false>;
    }) & ({
        __typename: 'VsHistoryDetail';
    })>;
}
export default VsHistoryDetailQuery_2b08598;
export { VsHistoryDetailQuery_2b08598 };
