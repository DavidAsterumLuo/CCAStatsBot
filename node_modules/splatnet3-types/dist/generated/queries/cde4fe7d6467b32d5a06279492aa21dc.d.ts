import { LinkedFieldType, OperationFieldType } from '../../generated-type-helpers.js';
import { Award, Badge, ClothingGear, Color, Gear, GearPower, HeadGear, Image, Nameplate, NameplateBackground, Player, Replay, ShoesGear, VsHistoryDetail, VsMode, VsPlayer, VsRule, VsStage, VsTeam, VsTeamResult, Weapon } from '../../types.js';
/**
 * cde4fe7d6467b32d5a06279492aa21dc DownloadSearchReplayQuery
 *
 * query DownloadSearchReplayQuery
 *
 * Generated 11/12/2022 from SplatNet 3 2.0.0-15dc639f.
 */
interface DownloadSearchReplayQuery_cde4fe7 {
    replay: OperationFieldType<'DownloadSearchReplayQuery', 'replay', {
        id: Replay['id'];
        historyDetail: LinkedFieldType<Replay, 'historyDetail', {
            id: VsHistoryDetail['id'];
            awards: LinkedFieldType<VsHistoryDetail, 'awards', {
                name: Award['name'];
            }, true>;
            judgement: VsHistoryDetail['judgement'];
            knockout: VsHistoryDetail['knockout'];
            myTeam: LinkedFieldType<VsHistoryDetail, 'myTeam', {
                result: LinkedFieldType<VsTeam, 'result', {
                    paintPoint: VsTeamResult['paintPoint'];
                    paintRatio: VsTeamResult['paintRatio'];
                    score: VsTeamResult['score'];
                }, false>;
            }, false>;
            playedTime: VsHistoryDetail['playedTime'];
            player: LinkedFieldType<VsHistoryDetail, 'player', ({
                id: VsPlayer['id'];
                clothingGear: LinkedFieldType<VsPlayer, 'clothingGear', ({
                    image: LinkedFieldType<ClothingGear, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: ClothingGear['name'];
                }) & ({
                    __isGear: 'Gear';
                    additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, true>;
                    primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, false>;
                }), false>;
                festGrade: VsPlayer['festGrade'];
                headGear: LinkedFieldType<VsPlayer, 'headGear', ({
                    image: LinkedFieldType<HeadGear, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: HeadGear['name'];
                }) & ({
                    __isGear: 'Gear';
                    additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, true>;
                    primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, false>;
                }), false>;
                shoesGear: LinkedFieldType<VsPlayer, 'shoesGear', ({
                    image: LinkedFieldType<ShoesGear, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: ShoesGear['name'];
                }) & ({
                    __isGear: 'Gear';
                    additionalGearPowers: LinkedFieldType<Gear, 'additionalGearPowers', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, true>;
                    primaryGearPower: LinkedFieldType<Gear, 'primaryGearPower', {
                        image: LinkedFieldType<GearPower, 'image', {
                            url: Image['url'];
                        }, false>;
                        name: GearPower['name'];
                    }, false>;
                }), false>;
                weapon: LinkedFieldType<VsPlayer, 'weapon', {
                    id: Weapon['id'];
                    image: LinkedFieldType<Weapon, 'image', {
                        url: Image['url'];
                    }, false>;
                    name: Weapon['name'];
                }, false>;
            }) & ({
                __isPlayer: 'Player';
                byname: Player['byname'];
                name: Player['name'];
                nameId: Player['nameId'];
                nameplate: LinkedFieldType<Player, 'nameplate', {
                    background: LinkedFieldType<Nameplate, 'background', {
                        id: NameplateBackground['id'];
                        image: LinkedFieldType<NameplateBackground, 'image', {
                            url: Image['url'];
                        }, false>;
                        textColor: LinkedFieldType<NameplateBackground, 'textColor', {
                            r: Color['r'];
                            g: Color['g'];
                            b: Color['b'];
                            a: Color['a'];
                        }, false>;
                    }, false>;
                    badges: LinkedFieldType<Nameplate, 'badges', {
                        id: Badge['id'];
                        image: LinkedFieldType<Badge, 'image', {
                            url: Image['url'];
                        }, false>;
                    }, true>;
                }, false>;
            }), false>;
            vsMode: LinkedFieldType<VsHistoryDetail, 'vsMode', {
                id: VsMode['id'];
                mode: VsMode['mode'];
                name: VsMode['name'];
            }, false>;
            vsRule: LinkedFieldType<VsHistoryDetail, 'vsRule', {
                id: VsRule['id'];
                name: VsRule['name'];
            }, false>;
            vsStage: LinkedFieldType<VsHistoryDetail, 'vsStage', {
                id: VsStage['id'];
                name: VsStage['name'];
            }, false>;
        }, false>;
        replayCode: Replay['replayCode'];
    }>;
}
export default DownloadSearchReplayQuery_cde4fe7;
export { DownloadSearchReplayQuery_cde4fe7 };
