import * as persist from 'node-persist';
import { NintendoAccountAuthError, NintendoAccountToken } from '../../api/na.js';
import { ErrorDescription, ErrorDescriptionSymbol, HasErrorDescription } from '../../util/errors.js';
export interface SavedNintendoAccountToken {
    token: NintendoAccountToken;
    expires_at: number;
}
export interface SavedNintendoAccountTokenError {
    data: NintendoAccountAuthError;
    created_at: number;
}
export declare function getNaToken(storage: persist.LocalStorage, na_session_token: string, client_id: string, ratelimit?: boolean): Promise<SavedNintendoAccountToken>;
export declare class InvalidNintendoAccountTokenError extends Error {
}
export declare class NintendoAccountSessionTokenExpiredError extends InvalidNintendoAccountTokenError implements HasErrorDescription {
    get [ErrorDescriptionSymbol](): ErrorDescription;
}
export declare class NintendoAccountSessionTokenInvalidError extends InvalidNintendoAccountTokenError implements HasErrorDescription {
    readonly data: SavedNintendoAccountTokenError;
    constructor(message: string, data: SavedNintendoAccountTokenError);
    get [ErrorDescriptionSymbol](): ErrorDescription;
}
