import * as persist from 'node-persist';
import CoralApi, { CoralAuthData } from '../../api/coral.js';
import ZncProxyApi from '../../api/znc-proxy.js';
export declare const Login: unique symbol;
export interface SavedToken extends CoralAuthData {
    expires_at: number;
    proxy_url?: string;
    /** Indicates we just logged in and didn't use a cached token */
    [Login]?: boolean;
}
export declare function getToken(storage: persist.LocalStorage, token: string, proxy_url: string, ratelimit?: boolean): Promise<{
    nso: ZncProxyApi;
    data: SavedToken;
}>;
export declare function getToken(storage: persist.LocalStorage, token: string, proxy_url?: undefined, ratelimit?: boolean): Promise<{
    nso: CoralApi;
    data: SavedToken;
}>;
export declare function getToken(storage: persist.LocalStorage, token: string, proxy_url?: string, ratelimit?: boolean): Promise<{
    nso: CoralApi | ZncProxyApi;
    data: SavedToken;
}>;
