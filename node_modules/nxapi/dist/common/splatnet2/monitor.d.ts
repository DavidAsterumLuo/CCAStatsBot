import persist from 'node-persist';
import SplatNet2Api from '../../api/splatnet2.js';
import { Records, Stages } from '../../api/splatnet2-types.js';
import Loop, { LoopResult } from '../../util/loop.js';
export declare class SplatNet2RecordsMonitor extends Loop {
    storage: persist.LocalStorage;
    token: string;
    splatnet: SplatNet2Api;
    stages: Stages;
    directory: string;
    znc_proxy_url?: string | undefined;
    update_interval: number;
    profile_image: boolean;
    favourite_stage: string | undefined;
    favourite_colour: string | undefined;
    results: boolean;
    results_summary_image: boolean;
    result_images: boolean;
    coop_results: boolean;
    /** Prevents redownloading user records on the first loop run */
    cached_records: Records | null;
    auto_update_iksm_session: boolean;
    constructor(storage: persist.LocalStorage, token: string, splatnet: SplatNet2Api, stages: Stages, directory: string, znc_proxy_url?: string | undefined);
    init(): Promise<void>;
    hasChanged(records: Records): Promise<boolean>;
    update(): Promise<void>;
    handleError(err: Error): Promise<LoopResult>;
}
