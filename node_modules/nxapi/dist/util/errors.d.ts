/// <reference types="node" resolution-mode="require"/>
import Loop, { LoopResult } from './loop.js';
import { ErrorResponse } from '../api/util.js';
export declare class ErrorDescription {
    readonly type: string;
    readonly message: string;
    constructor(type: string, message: string);
    static getErrorDescription(err: Error | unknown): string;
}
export declare const ErrorDescriptionSymbol: unique symbol;
export declare abstract class HasErrorDescription {
    abstract get [ErrorDescriptionSymbol](): ErrorDescription | null;
}
export declare const temporary_system_errors: {
    ETIMEDOUT: string;
    ENOTFOUND: null;
    EAI_AGAIN: string;
    ECONNRESET: string;
    ENETUNREACH: string;
};
export declare const temporary_http_errors: number[];
export declare function handleError(err: ErrorResponse | NodeJS.ErrnoException, loop: Loop): Promise<LoopResult>;
