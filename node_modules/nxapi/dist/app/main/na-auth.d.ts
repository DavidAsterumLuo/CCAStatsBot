import { BrowserWindow } from 'electron';
import * as persist from 'node-persist';
import { NintendoAccountSessionAuthorisation, NintendoAccountSessionAuthorisationError, NintendoAccountSessionToken } from '../../api/na.js';
export type NintendoAccountAuthResult = NintendoAccountSessionToken;
export declare function createAuthWindow(): BrowserWindow;
export interface NintendoAccountSessionTokenCode {
    authenticator: NintendoAccountSessionAuthorisation;
    code: string;
    window?: BrowserWindow;
}
export declare class AuthoriseCancelError extends NintendoAccountSessionAuthorisationError {
    constructor(message?: string);
}
export declare function getSessionTokenCodeByInAppBrowser(authenticator: NintendoAccountSessionAuthorisation, close_window: false): Promise<NintendoAccountSessionTokenCode & {
    window: BrowserWindow;
}>;
export declare function getSessionTokenCodeByInAppBrowser(authenticator: NintendoAccountSessionAuthorisation, close_window: true): Promise<NintendoAccountSessionTokenCode & {
    window?: never;
}>;
export declare function getSessionTokenCodeByInAppBrowser(authenticator: NintendoAccountSessionAuthorisation, close_window?: boolean): Promise<NintendoAccountSessionTokenCode & {
    window?: BrowserWindow;
}>;
export declare function getSessionTokenCodeByDefaultBrowser(authenticator: NintendoAccountSessionAuthorisation, close_window?: boolean, force_manual?: boolean): Promise<NintendoAccountSessionTokenCode>;
export declare function handleAuthUri(url_string: string): void;
export declare function addNsoAccount(storage: persist.LocalStorage, use_in_app_browser?: boolean): Promise<{
    nso: import("../../api/coral.js").default | import("../../index.js").ZncProxyApi;
    data: import("../../common/auth/coral.js").SavedToken;
}>;
export declare function askAddNsoAccount(storage: persist.LocalStorage, iab?: boolean): Promise<{
    nso: import("../../api/coral.js").default | import("../../index.js").ZncProxyApi;
    data: import("../../common/auth/coral.js").SavedToken;
} | undefined>;
export declare function addPctlAccount(storage: persist.LocalStorage, use_in_app_browser?: boolean): Promise<{
    moon: import("../../api/moon.js").default;
    data: import("../../common/auth/moon.js").SavedMoonToken;
}>;
export declare function askAddPctlAccount(storage: persist.LocalStorage, iab?: boolean): Promise<{
    moon: import("../../api/moon.js").default;
    data: import("../../common/auth/moon.js").SavedMoonToken;
} | undefined>;
