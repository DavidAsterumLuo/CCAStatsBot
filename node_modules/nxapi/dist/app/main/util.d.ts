import { BrowserWindow, MessageBoxOptions, Session } from 'electron';
import { App, Store } from './index.js';
import { SavedToken } from '../../common/auth/coral.js';
import { ProxyAgentOptions } from '../../util/undici-proxy.js';
export declare const bundlepath: string;
export declare function getNativeImageFromUrl(url: URL | string, useragent?: string): Promise<Electron.NativeImage>;
export declare function tryGetNativeImageFromUrl(url: URL | string, useragent?: string): Promise<Electron.NativeImage | undefined>;
export declare function askUserForUri(store: Store, uri: string, prompt: string): Promise<[string, SavedToken] | null>;
interface ErrorBoxOptions extends MessageBoxOptions {
    error: Error | unknown;
    app?: App;
    window?: BrowserWindow;
}
export declare function showErrorDialog(options: ErrorBoxOptions): Promise<Electron.MessageBoxReturnValue>;
export declare function buildElectronProxyAgent(options: ProxyAgentOptions & {
    session: Session;
}): import("undici/types/agent.js").default;
export {};
