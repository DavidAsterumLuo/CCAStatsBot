import { Tray, MenuItem, BrowserWindow, KeyboardEvent } from 'electron';
import { App } from './index.js';
import { EmbeddedPresenceMonitor, EmbeddedProxyPresenceMonitor } from './monitor.js';
import { CoralApiInterface } from '../../api/coral.js';
import { WebService } from '../../api/coral-types.js';
import { SavedToken } from '../../common/auth/coral.js';
import { SavedMoonToken } from '../../common/auth/moon.js';
export default class MenuApp {
    readonly app: App;
    tray: Tray;
    constructor(app: App);
    updateMenu(): Promise<void>;
    addNsoAccount: (item: MenuItem, window: BrowserWindow | undefined, event: KeyboardEvent) => Promise<{
        nso: import("../../api/coral.js").default | import("../../index.js").ZncProxyApi;
        data: SavedToken;
    } | undefined>;
    addPctlAccount: (item: MenuItem, window: BrowserWindow | undefined, event: KeyboardEvent) => Promise<{
        moon: import("../../index.js").MoonApi;
        data: SavedMoonToken;
    } | undefined>;
    protected webservices: Map<string, WebService[]>;
    getWebServices(language: string): Promise<WebService[]>;
    getWebServiceItems(language: string, token: string): Promise<MenuItem[]>;
    openWebService(token: string, coral: CoralApiInterface, data: SavedToken, webservice: WebService): Promise<void>;
    getActiveDiscordPresenceMonitor(): EmbeddedPresenceMonitor | EmbeddedProxyPresenceMonitor | null;
    setActiveDiscordPresenceUser(id: string | null): Promise<void>;
    setUserNotificationsActive(id: string, active: boolean): Promise<void>;
    setFriendNotificationsActive(id: string, active: boolean): Promise<void>;
    saveMonitorState(): Promise<void>;
    saveMonitorStateAndUpdateMenu(): void;
    showAddFriendWindow(user: string): void;
}
