/// <reference types="yargs" />
import type { Arguments as ParentArguments } from '../util.js';
import { ArgumentsCamelCase, Argv, YargsArguments } from '../../util/yargs.js';
export declare const command = "discord-activity";
export declare const desc = "Get Nintendo Switch presence as a Discord activity";
export declare function builder(yargs: Argv<ParentArguments>): import("yargs").Argv<{
    "data-path": string;
} & {
    "znc-proxy-url": string | undefined;
} & {
    user: string | undefined;
} & {
    token: string | undefined;
} & {
    "show-inactive-presence": boolean;
} & {
    "show-event": boolean;
} & {
    "show-play-time": string;
} & {
    "friend-nsaid": string | undefined;
} & {
    "friend-code": string | undefined;
} & {
    "presence-url": string | undefined;
} & {
    "presence-json": string | undefined;
} & {
    "show-discord-application": boolean;
} & {
    json: boolean | undefined;
} & {
    "json-pretty-print": boolean | undefined;
}>;
type Arguments = YargsArguments<ReturnType<typeof builder>>;
export declare function handler(argv: ArgumentsCamelCase<Arguments>): Promise<void>;
export interface DiscordApplicationRpc {
    id: string;
    name: string;
    icon: string | null;
    description: string;
    summary: string;
    type: null;
    cover_image?: string;
    hook: boolean;
    verify_key: string;
    flags: number;
}
export declare function getDiscordApplicationRpc(id: string): Promise<DiscordApplicationRpc>;
export {};
