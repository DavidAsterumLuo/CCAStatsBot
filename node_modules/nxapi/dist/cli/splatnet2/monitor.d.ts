/// <reference types="yargs" />
import { ArgumentsCamelCase, Argv, YargsArguments } from '../../util/yargs.js';
import { Arguments as ParentArguments } from '../splatnet2.js';
export declare const command = "monitor [directory]";
export declare const desc = "Monitor SplatNet 2 for new user records/battles/Salmon Run results";
export declare function builder(yargs: Argv<ParentArguments>): import("yargs").Argv<{
    "data-path": string;
} & {
    "znc-proxy-url": string | undefined;
} & {
    "auto-update-session": boolean;
} & {
    directory: string | undefined;
} & {
    user: string | undefined;
} & {
    token: string | undefined;
} & {
    "profile-image": boolean;
} & {
    "favourite-stage": string | undefined;
} & {
    "favourite-colour": string | undefined;
} & {
    battles: boolean;
} & {
    "battle-summary-image": boolean;
} & {
    "battle-images": boolean;
} & {
    coop: boolean;
} & {
    "update-interval": number;
}>;
type Arguments = YargsArguments<ReturnType<typeof builder>>;
export declare function handler(argv: ArgumentsCamelCase<Arguments>): Promise<void>;
export {};
