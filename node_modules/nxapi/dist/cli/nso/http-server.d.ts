/// <reference types="yargs" />
import type { Arguments as ParentArguments } from '../nso.js';
import CoralApi from '../../api/coral.js';
import { AuthPolicy } from '../../api/znc-proxy.js';
import { ArgumentsCamelCase, Argv, YargsArguments } from '../../util/yargs.js';
import { SavedToken } from '../../common/auth/coral.js';
import { CoralUser } from '../../common/users.js';
declare global {
    namespace Express {
        interface Request {
            coralUser?: CoralUser;
            coral?: CoralApi;
            coralAuthData?: SavedToken;
            proxyAuthPolicy?: AuthPolicy;
            proxyAuthPolicyUser?: string;
            proxyAuthPolicyToken?: string;
        }
    }
}
export declare const command = "http-server";
export declare const desc = "Starts a HTTP server to access the Nintendo Switch Online app API";
export declare function builder(yargs: Argv<ParentArguments>): import("yargs").Argv<{
    "data-path": string;
} & {
    "znc-proxy-url": string | undefined;
} & {
    listen: string[] | (string | number)[];
} & {
    "require-token": boolean;
} & {
    "update-interval": number;
}>;
type Arguments = YargsArguments<ReturnType<typeof builder>>;
export declare function handler(argv: ArgumentsCamelCase<Arguments>): Promise<void>;
export {};
