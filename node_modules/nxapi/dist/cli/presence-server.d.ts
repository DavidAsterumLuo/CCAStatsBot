/// <reference types="yargs" />
import type { Arguments as ParentArguments } from '../cli.js';
import { ArgumentsCamelCase, Argv, YargsArguments } from '../util/yargs.js';
export declare const command = "presence-server";
export declare const desc = "Starts a HTTP server to fetch presence data from Coral and SplatNet 3";
export declare function builder(yargs: Argv<ParentArguments>): import("yargs").Argv<{
    "data-path": string;
} & {
    listen: string[] | (string | number)[];
} & {
    user: string[] | undefined;
} & {
    splatnet3: boolean;
} & {
    "allow-all-users": boolean;
} & {
    "splatnet3-proxy": boolean;
} & {
    "splatnet3-proxy-url": string | undefined;
} & {
    "splatnet3-fest-votes": boolean;
} & {
    "splatnet3-record-fest-votes": boolean;
} & {
    "update-interval": number;
} & {
    "znc-proxy-url": string | undefined;
}>;
type Arguments = YargsArguments<ReturnType<typeof builder>>;
export declare function handler(argv: ArgumentsCamelCase<Arguments>): Promise<void>;
export {};
