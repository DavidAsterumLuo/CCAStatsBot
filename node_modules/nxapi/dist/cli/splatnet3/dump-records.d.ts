/// <reference types="yargs" />
import type { Arguments as ParentArguments } from '../splatnet3.js';
import { ArgumentsCamelCase, Argv, YargsArguments } from '../../util/yargs.js';
import SplatNet3Api from '../../api/splatnet3.js';
export declare const command = "dump-records [directory]";
export declare const desc = "Download all player history/hero/catalog records and stage/weapon stats";
export declare function builder(yargs: Argv<ParentArguments>): import("yargs").Argv<{
    "data-path": string;
} & {
    "znc-proxy-url": string | undefined;
} & {
    "auto-update-session": boolean;
} & {
    directory: string | undefined;
} & {
    user: string | undefined;
} & {
    token: string | undefined;
} & {
    history: boolean | undefined;
} & {
    hero: boolean | undefined;
} & {
    catalog: boolean | undefined;
} & {
    stage: boolean | undefined;
} & {
    weapon: boolean | undefined;
}>;
type Arguments = YargsArguments<ReturnType<typeof builder>>;
export declare function handler(argv: ArgumentsCamelCase<Arguments>): Promise<void>;
export declare function dumpHistoryRecords(splatnet: SplatNet3Api, directory: string, refresh?: boolean): Promise<void>;
export declare function dumpHeroRecords(splatnet: SplatNet3Api, directory: string): Promise<void>;
export declare function dumpCatalogRecords(splatnet: SplatNet3Api, directory: string, refresh?: boolean): Promise<void>;
export declare function dumpStageStats(splatnet: SplatNet3Api, directory: string, refresh?: boolean): Promise<void>;
export declare function dumpWeaponStats(splatnet: SplatNet3Api, directory: string, refresh?: boolean): Promise<void>;
export {};
