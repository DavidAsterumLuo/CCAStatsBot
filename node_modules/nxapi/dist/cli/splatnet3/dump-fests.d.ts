/// <reference types="yargs" />
import type { Arguments as ParentArguments } from '../splatnet3.js';
import { ArgumentsCamelCase, Argv, YargsArguments } from '../../util/yargs.js';
import SplatNet3Api from '../../api/splatnet3.js';
export declare const command = "dump-fests [directory]";
export declare const desc = "Download all Splatfest records";
export declare function builder(yargs: Argv<ParentArguments>): import("yargs").Argv<{
    "data-path": string;
} & {
    "znc-proxy-url": string | undefined;
} & {
    "auto-update-session": boolean;
} & {
    directory: string | undefined;
} & {
    user: string | undefined;
} & {
    token: string | undefined;
} & {
    "include-rankings": boolean;
}>;
type Arguments = YargsArguments<ReturnType<typeof builder>>;
export declare function handler(argv: ArgumentsCamelCase<Arguments>): Promise<void>;
export declare function dumpFestRecords(splatnet: SplatNet3Api, directory: string, include_rankings?: boolean): Promise<void>;
export {};
